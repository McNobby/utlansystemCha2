{"ast":null,"code":"import _toConsumableArray from\"C:/Users/teodo/Documents/GitHub/utlansystemCha2/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/teodo/Documents/GitHub/utlansystemCha2/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Sucsess from\"./Sucsess\";import axios from\"axios\";import sendToBackend from\"../lib/sendToBackend\";import{useLogin}from\"../loginContext\";import{apiAdress}from'./config.json';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Utlaan(){var loginState=useLogin();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),scanned=_useState2[0],setScanned=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),sucsess=_useState4[0],setSucsess=_useState4[1];useEffect(function(){var utlant=JSON.parse(loginState.utlant);setScanned(utlant);},[loginState]);var handleInput=function handleInput(e){var regex=/\\d+ZX$/;var check=regex.test(e.target.value);if(check){sendToDB(e.target.value);setTimeout(function(){e.target.value=\"\";},100);}};var sendToDB=function sendToDB(e){console.log(e);var req={type:'get',getType:'laanut',_id:e};axios.post(apiAdress,req).then(function(res){console.log(res);//checks if scanned object was found and is not loaned out\nif(res.data==='Det du skannet er ikke registrert!'||res.data==='allerede lånt ut!'){alert(res.data);e=\"\";return;}//rest of code is if there was a suscessful response\nvar data=res.data[0];var newScanned=[].concat(_toConsumableArray(scanned),[{id:scanned.length,name:data.item,bCode:data.barcode,info:data.info,plassering:data.plassering}]);setScanned(newScanned);//saves new scanned item to db\nsendToBackend('utlanUpdate',{_id:localStorage.getItem('elevID'),utlant:newScanned,elevNavn:localStorage.getItem('elevNavn')});e=\"\";//shows the sucsess message for 2seconds\nsetSucsess(true);setTimeout(function(){setSucsess(false);},3000);});};var scannedList=scanned.map(function(i){return/*#__PURE__*/_jsxs(\"div\",{className:\"listItem\",children:[/*#__PURE__*/_jsx(\"p\",{children:i.name}),/*#__PURE__*/_jsx(\"p\",{children:i.info}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",i.bCode,\" \"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\" \",i.plassering,\" \"]})]},i.id);});return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[sucsess?/*#__PURE__*/_jsx(Sucsess,{type:\"Sucsess\"}):\"\",/*#__PURE__*/_jsx(\"h2\",{children:\"Utl\\xE5n\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",onInput:handleInput,className:\"wideInput\",autoFocus:true}),/*#__PURE__*/_jsx(\"div\",{className:\"list\",children:/*#__PURE__*/_jsx(\"ul\",{children:scannedList})})]});}","map":{"version":3,"sources":["C:/Users/teodo/Documents/GitHub/utlansystemCha2/src/Components/utlaan.js"],"names":["React","useState","useEffect","Sucsess","axios","sendToBackend","useLogin","apiAdress","Utlaan","loginState","scanned","setScanned","sucsess","setSucsess","utlant","JSON","parse","handleInput","e","regex","check","test","target","value","sendToDB","setTimeout","console","log","req","type","getType","_id","post","then","res","data","alert","newScanned","id","length","name","item","bCode","barcode","info","plassering","localStorage","getItem","elevNavn","scannedList","map","i"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\r\nimport Sucsess from \"./Sucsess\"\r\nimport axios from \"axios\"\r\nimport sendToBackend from \"../lib/sendToBackend\"\r\nimport { useLogin } from \"../loginContext\"\r\nimport {apiAdress} from './config.json'\r\n\r\nexport default function Utlaan() {\r\n    const loginState = useLogin()\r\n    const [scanned, setScanned] = useState([])\r\n    const [sucsess, setSucsess] = useState(false)\r\n\r\n    useEffect(()=>{\r\n        const utlant = JSON.parse(loginState.utlant)\r\n        setScanned(utlant)\r\n    },[loginState])\r\n\r\n    const handleInput = (e) =>{\r\n\r\n        let regex = /\\d+ZX$/\r\n        let check = regex.test(e.target.value)\r\n        \r\n        if(check){\r\n\r\n            sendToDB(e.target.value)\r\n            setTimeout(()=>{\r\n                e.target.value = \"\"\r\n            },100)\r\n        }\r\n    }\r\n\r\n    const sendToDB = (e) =>{\r\n        console.log(e);\r\n        const req = {\r\n            type: 'get',\r\n            getType: 'laanut',\r\n            _id: e\r\n        }\r\n        axios.post(apiAdress, req)\r\n        .then(res =>{\r\n            console.log(res);\r\n            //checks if scanned object was found and is not loaned out\r\n            if(res.data === 'Det du skannet er ikke registrert!' || res.data === 'allerede lånt ut!'){\r\n                alert(res.data)\r\n                e = \"\"\r\n                return\r\n            }\r\n            //rest of code is if there was a suscessful response\r\n            const data = res.data[0]\r\n            const newScanned = [...scanned, {\r\n                id: scanned.length,\r\n                name: data.item,\r\n                bCode: data.barcode,\r\n                info: data.info,\r\n                plassering: data.plassering\r\n            }]\r\n            setScanned(newScanned)\r\n            \r\n            //saves new scanned item to db\r\n            sendToBackend('utlanUpdate', {\r\n            _id: localStorage.getItem('elevID'), \r\n            utlant: newScanned, \r\n            elevNavn: localStorage.getItem('elevNavn') })\r\n\r\n            e = \"\"\r\n            //shows the sucsess message for 2seconds\r\n            setSucsess(true)\r\n            setTimeout(()=>{\r\n                setSucsess(false)\r\n            }, 3000)\r\n        })\r\n    }\r\n\r\n    const scannedList = scanned.map(i =>{\r\n        return(\r\n            <div className=\"listItem\" key={i.id}>\r\n            <p>{i.name}</p>\r\n            <p>{i.info}</p>\r\n            <p> {i.bCode} </p>\r\n            <p> {i.plassering} </p>\r\n            \r\n        </div>\r\n        )\r\n    })\r\n\r\n    return(\r\n        <div className=\"card\">\r\n            {sucsess ? <Sucsess type=\"Sucsess\"/> : \"\"}\r\n            <h2>Utlån</h2>\r\n            <input type=\"text\" onInput={handleInput} className=\"wideInput\" autoFocus />\r\n                     \r\n            <div className=\"list\">\r\n                <ul>{scannedList}</ul>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}